import { createStitches } from '@stitches/react';
import {
  gray,
  mauve,
  slate,
  sage,
  olive,
  sand,
  tomato,
  red,
  crimson,
  pink,
  plum,
  purple,
  violet,
  indigo,
  blue,
  sky,
  mint,
  cyan,
  teal,
  green,
  grass,
  lime,
  yellow,
  amber,
  orange,
  brown,
  bronze,
  gold,
  grayA,
  mauveA,
  slateA,
  sageA,
  oliveA,
  sandA,
  tomatoA,
  redA,
  crimsonA,
  pinkA,
  plumA,
  purpleA,
  violetA,
  indigoA,
  blueA,
  skyA,
  mintA,
  cyanA,
  tealA,
  greenA,
  grassA,
  limeA,
  yellowA,
  amberA,
  orangeA,
  brownA,
  bronzeA,
  goldA,
  whiteA,
  blackA,
  grayDark,
  mauveDark,
  slateDark,
  sageDark,
  oliveDark,
  sandDark,
  tomatoDark,
  redDark,
  crimsonDark,
  pinkDark,
  plumDark,
  purpleDark,
  violetDark,
  indigoDark,
  blueDark,
  skyDark,
  mintDark,
  cyanDark,
  tealDark,
  greenDark,
  grassDark,
  limeDark,
  yellowDark,
  amberDark,
  orangeDark,
  brownDark,
  bronzeDark,
  goldDark,
  grayDarkA,
  mauveDarkA,
  slateDarkA,
  sageDarkA,
  oliveDarkA,
  sandDarkA,
  tomatoDarkA,
  redDarkA,
  crimsonDarkA,
  pinkDarkA,
  plumDarkA,
  purpleDarkA,
  violetDarkA,
  indigoDarkA,
  blueDarkA,
  skyDarkA,
  mintDarkA,
  cyanDarkA,
  tealDarkA,
  greenDarkA,
  grassDarkA,
  limeDarkA,
  yellowDarkA,
  amberDarkA,
  orangeDarkA,
  brownDarkA,
  bronzeDarkA,
  goldDarkA,
} from '@radix-ui/colors';
import type * as Stitches from '@stitches/react';
export type { VariantProps } from '@stitches/react';

export const {
  styled,
  css,
  theme,
  createTheme,
  getCssText,
  globalCss,
  keyframes,
  config,
  reset,
} = createStitches({
  theme: {
    colors: {
      workOsGray1: 'hsl(264, 12%, 99%)',
      workOsGray2: 'hsl(264, 7%, 97.5%)',
      workOsGray3: 'hsl(254, 3%, 95%)',
      workOsGray4: 'hsl(255, 3%, 93%)',
      workOsGray5: 'hsl(256, 3%, 91%)',
      workOsGray6: 'hsl(254, 4%, 91%)',
      workOsGray7: 'hsl(251, 4%, 83%)',
      workOsGray8: 'hsl(250, 4%, 75%)',
      workOsGray9: 'hsl(232, 4%, 57%)',
      workOsGray10: 'hsl(233, 3.5%, 53.5%)',
      workOsGray11: 'hsl(232, 4%, 44%)',
      workOsGray12: 'hsl(240, 12%, 9%)',

      workOsRed1: 'hsl(348, 100%, 99%)',
      workOsRed2: 'hsl(348, 100%, 98.5%)',
      workOsRed3: 'hsl(349, 100%, 97%)',
      workOsRed4: 'hsl(349, 98%, 95.5%)',
      workOsRed5: 'hsl(349, 96%, 94%)',
      workOsRed6: 'hsl(349, 82%, 92%)',
      workOsRed7: 'hsl(348, 78%, 83%)',
      workOsRed8: 'hsl(348, 75%, 75.5%)',
      workOsRed9: 'hsl(347, 75%, 58.5%)',
      workOsRed10: 'hsl(347, 70%, 54.5%)',
      workOsRed11: 'hsl(347, 65%, 49.5%)',
      workOsRed12: 'hsl(354, 70%, 15%)',

      workOsPurple1: 'hsl(243, 65%, 99.5%)',
      workOsPurple2: 'hsl(240, 100%, 99%)',
      workOsPurple3: 'hsl(240, 99%, 97.5%)',
      workOsPurple4: 'hsl(240, 98%, 96%)',
      workOsPurple5: 'hsl(240, 96%, 95%)',
      workOsPurple6: 'hsl(240, 78%, 93%)',
      workOsPurple7: 'hsl(240, 72%, 85%)',
      workOsPurple8: 'hsl(240, 74%, 79%)',
      workOsPurple9: 'hsl(240, 78%, 66%)',
      workOsPurple10: 'hsl(239, 72%, 62%)',
      workOsPurple11: 'hsl(238, 63%, 58%)',
      workOsPurple12: 'hsl(242, 50%, 15%)',

      workOsBlue1: 'hsl(198, 100%, 98.5%)',
      workOsBlue2: 'hsl(198, 100%, 97.5%)',
      workOsBlue3: 'hsl(198, 100%, 94.5%)',
      workOsBlue4: 'hsl(201, 100%, 92.5%)',
      workOsBlue5: 'hsl(202, 100%, 91%)',
      workOsBlue6: 'hsl(209, 82%, 89%)',
      workOsBlue7: 'hsl(208, 77%, 77%)',
      workOsBlue8: 'hsl(206, 82%, 65%)',
      workOsBlue9: 'hsl(206, 100%, 50%)',
      workOsBlue10: 'hsl(208, 100%, 47%)',
      workOsBlue11: 'hsl(211, 100%, 43%)',
      workOsBlue12: 'hsl(211, 100%, 12%)',

      workOsGreen1: 'hsl(151, 60%, 98%)',
      workOsGreen2: 'hsl(153, 72%, 96.5%)',
      workOsGreen3: 'hsl(154, 75%, 92.5%)',
      workOsGreen4: 'hsl(155, 74%, 90%)',
      workOsGreen5: 'hsl(156, 65%, 86%)',
      workOsGreen6: 'hsl(158, 55%, 83.5%)',
      workOsGreen7: 'hsl(164, 45%, 68.5%)',
      workOsGreen8: 'hsl(166, 45%, 53.5%)',
      workOsGreen9: 'hsl(166, 60%, 41.5%)',
      workOsGreen10: 'hsl(167, 62%, 37.5%)',
      workOsGreen11: 'hsl(168, 67%, 28%)',
      workOsGreen12: 'hsl(170, 44%, 9%)',

      workOsYellow1: 'hsl(54, 90%, 97.5%)',
      workOsYellow2: 'hsl(52, 100%, 95.5%)',
      workOsYellow3: 'hsl(52, 100%, 89%)',
      workOsYellow4: 'hsl(52, 100%, 84%)',
      workOsYellow5: 'hsl(54, 92%, 78%)',
      workOsYellow6: 'hsl(50, 85%, 77%)',
      workOsYellow7: 'hsl(44, 80%, 68%)',
      workOsYellow8: 'hsl(46, 80%, 53%)',
      workOsYellow9: 'hsl(53, 92%, 50%)',
      workOsYellow10: 'hsl(50, 100%, 48.5%)',
      workOsYellow11: 'hsl(42, 100%, 29%)',
      workOsYellow12: 'hsl(48, 50%, 15%)',

      ...gray,
      ...mauve,
      ...slate,
      ...sage,
      ...olive,
      ...sand,
      ...tomato,
      ...red,
      ...crimson,
      ...pink,
      ...plum,
      ...purple,
      ...violet,
      ...indigo,
      ...blue,
      ...sky,
      ...mint,
      ...cyan,
      ...teal,
      ...green,
      ...grass,
      ...lime,
      ...yellow,
      ...amber,
      ...orange,
      ...brown,
      ...bronze,
      ...gold,

      ...grayA,
      ...mauveA,
      ...slateA,
      ...sageA,
      ...oliveA,
      ...sandA,
      ...tomatoA,
      ...redA,
      ...crimsonA,
      ...pinkA,
      ...plumA,
      ...purpleA,
      ...violetA,
      ...indigoA,
      ...blueA,
      ...skyA,
      ...mintA,
      ...cyanA,
      ...tealA,
      ...greenA,
      ...grassA,
      ...limeA,
      ...yellowA,
      ...amberA,
      ...orangeA,
      ...brownA,
      ...bronzeA,
      ...goldA,

      ...whiteA,
      ...blackA,

      // Semantic colors
      hiContrast: '$slate12',
      // loContrast: '$slate1',
      loContrast: 'white',
      canvas: 'hsl(0 0% 93%)',
      panel: 'white',
      transparentPanel: 'hsl(0 0% 0% / 97%)',
      shadowLight: 'hsl(206 22% 7% / 35%)',
      shadowDark: 'hsl(206 22% 7% / 20%)',
    },
    fonts: {
      untitled: 'Untitled Sans, -apple-system, system-ui, sans-serif',
      mono: 'SÃ¶hne Mono, menlo, monospace',
    },
    space: {
      1: '5px',
      2: '10px',
      3: '15px',
      4: '20px',
      5: '25px',
      6: '35px',
      7: '45px',
      8: '65px',
      9: '80px',
    },
    sizes: {
      1: '5px',
      2: '10px',
      3: '15px',
      4: '20px',
      5: '25px',
      6: '35px',
      7: '45px',
      8: '65px',
      9: '80px',
    },
    // space: {
    //   1: '4px',
    //   2: '8px',
    //   3: '16px',
    //   4: '20px',
    //   5: '24px',
    //   6: '32px',
    //   7: '48px',
    //   8: '64px',
    //   9: '80px',
    // },
    // sizes: {
    //   1: '4px',
    //   2: '8px',
    //   3: '16px',
    //   4: '20px',
    //   5: '24px',
    //   6: '32px',
    //   7: '48px',
    //   8: '64px',
    //   9: '80px',
    // },
    fontSizes: {
      1: '12px',
      2: '13px',
      3: '15px',
      4: '17px',
      5: '19px',
      6: '21px',
      7: '27px',
      8: '35px',
      9: '59px',
    },
    // fontSizes: {
    //   1: '11px',
    //   2: '12px',
    //   3: '15px',
    //   4: '17px',
    //   5: '20px',
    //   6: '22px',
    //   7: '28px',
    //   8: '36px',
    //   9: '60px',
    // },
    radii: {
      1: '4px',
      2: '6px',
      3: '8px',
      4: '12px',
      round: '50%',
      pill: '9999px',
    },
    zIndices: {
      1: '100',
      2: '200',
      3: '300',
      4: '400',
      max: '999',
    },
  },
  media: {
    bp1: '(min-width: 520px)',
    bp2: '(min-width: 900px)',
    bp3: '(min-width: 1200px)',
    bp4: '(min-width: 1800px)',
    motion: '(prefers-reduced-motion)',
    hover: '(any-hover: hover)',
    dark: '(prefers-color-scheme: dark)',
    light: '(prefers-color-scheme: light)',
  },
  utils: {
    p: (value: Stitches.PropertyValue<'padding'>) => ({
      padding: value,
    }),
    pt: (value: Stitches.PropertyValue<'paddingTop'>) => ({
      paddingTop: value,
    }),
    pr: (value: Stitches.PropertyValue<'paddingRight'>) => ({
      paddingRight: value,
    }),
    pb: (value: Stitches.PropertyValue<'paddingBottom'>) => ({
      paddingBottom: value,
    }),
    pl: (value: Stitches.PropertyValue<'paddingLeft'>) => ({
      paddingLeft: value,
    }),
    px: (value: Stitches.PropertyValue<'paddingLeft'>) => ({
      paddingLeft: value,
      paddingRight: value,
    }),
    py: (value: Stitches.PropertyValue<'paddingTop'>) => ({
      paddingTop: value,
      paddingBottom: value,
    }),

    m: (value: Stitches.PropertyValue<'margin'>) => ({
      margin: value,
    }),
    mt: (value: Stitches.PropertyValue<'marginTop'>) => ({
      marginTop: value,
    }),
    mr: (value: Stitches.PropertyValue<'marginRight'>) => ({
      marginRight: value,
    }),
    mb: (value: Stitches.PropertyValue<'marginBottom'>) => ({
      marginBottom: value,
    }),
    ml: (value: Stitches.PropertyValue<'marginLeft'>) => ({
      marginLeft: value,
    }),
    mx: (value: Stitches.PropertyValue<'marginLeft'>) => ({
      marginLeft: value,
      marginRight: value,
    }),
    my: (value: Stitches.PropertyValue<'marginTop'>) => ({
      marginTop: value,
      marginBottom: value,
    }),

    ta: (value: Stitches.PropertyValue<'textAlign'>) => ({ textAlign: value }),

    fd: (value: Stitches.PropertyValue<'flexDirection'>) => ({ flexDirection: value }),
    fw: (value: Stitches.PropertyValue<'flexWrap'>) => ({ flexWrap: value }),

    ai: (value: Stitches.PropertyValue<'alignItems'>) => ({ alignItems: value }),
    ac: (value: Stitches.PropertyValue<'alignContent'>) => ({ alignContent: value }),
    jc: (value: Stitches.PropertyValue<'justifyContent'>) => ({ justifyContent: value }),
    as: (value: Stitches.PropertyValue<'alignSelf'>) => ({ alignSelf: value }),
    fg: (value: Stitches.PropertyValue<'flexGrow'>) => ({ flexGrow: value }),
    fs: (value: Stitches.PropertyValue<'flexShrink'>) => ({ flexShrink: value }),
    fb: (value: Stitches.PropertyValue<'flexBasis'>) => ({ flexBasis: value }),

    bc: (value: Stitches.PropertyValue<'backgroundColor'>) => ({
      backgroundColor: value,
    }),

    br: (value: Stitches.PropertyValue<'borderRadius'>) => ({
      borderRadius: value,
    }),
    btrr: (value: Stitches.PropertyValue<'borderTopRightRadius'>) => ({
      borderTopRightRadius: value,
    }),
    bbrr: (value: Stitches.PropertyValue<'borderBottomRightRadius'>) => ({
      borderBottomRightRadius: value,
    }),
    bblr: (value: Stitches.PropertyValue<'borderBottomLeftRadius'>) => ({
      borderBottomLeftRadius: value,
    }),
    btlr: (value: Stitches.PropertyValue<'borderTopLeftRadius'>) => ({
      borderTopLeftRadius: value,
    }),

    bs: (value: Stitches.PropertyValue<'boxShadow'>) => ({ boxShadow: value }),

    lh: (value: Stitches.PropertyValue<'lineHeight'>) => ({ lineHeight: value }),

    ox: (value: Stitches.PropertyValue<'overflowX'>) => ({ overflowX: value }),
    oy: (value: Stitches.PropertyValue<'overflowY'>) => ({ overflowY: value }),

    pe: (value: Stitches.PropertyValue<'pointerEvents'>) => ({ pointerEvents: value }),
    us: (value: Stitches.PropertyValue<'userSelect'>) => ({
      WebkitUserSelect: value,
      userSelect: value,
    }),

    userSelect: (value: Stitches.PropertyValue<'userSelect'>) => ({
      WebkitUserSelect: value,
      userSelect: value,
    }),

    size: (value: Stitches.PropertyValue<'width'>) => ({
      width: value,
      height: value,
    }),

    appearance: (value: Stitches.PropertyValue<'appearance'>) => ({
      WebkitAppearance: value,
      appearance: value,
    }),
    backgroundClip: (value: Stitches.PropertyValue<'backgroundClip'>) => ({
      WebkitBackgroundClip: value,
      backgroundClip: value,
    }),
  },
});

export type CSS = Stitches.CSS<typeof config>;

export const darkTheme = createTheme('dark-theme', {
  colors: {
    workOsGray1: 'hsl(232, 5%, 9.5%)',
    workOsGray2: 'hsl(232, 5%, 11%)',
    workOsGray3: 'hsl(235, 4%, 17%)',
    workOsGray4: 'hsl(235, 4%, 19%)',
    workOsGray5: 'hsl(235, 4%, 21%)',
    workOsGray6: 'hsl(240, 4%, 21.5%)',
    workOsGray7: 'hsl(240, 4%, 26%)',
    workOsGray8: 'hsl(240, 4%, 32%)',
    workOsGray9: 'hsl(238, 4%, 45%)',
    workOsGray10: 'hsl(239, 3%, 51%)',
    workOsGray11: 'hsl(240, 3%, 64%)',
    workOsGray12: 'hsl(240, 4%, 94%)',

    workOsRed1: 'hsl(343, 23%, 10%)',
    workOsRed2: 'hsl(347, 34%, 12%)',
    workOsRed3: 'hsl(346, 43%, 20%)',
    workOsRed4: 'hsl(346, 47%, 22.5%)',
    workOsRed5: 'hsl(346, 51%, 26%)',
    workOsRed6: 'hsl(346, 55%, 27.5%)',
    workOsRed7: 'hsl(347, 60%, 35%)',
    workOsRed8: 'hsl(348, 65%, 41%)',
    workOsRed9: 'hsl(348, 75%, 59%)',
    workOsRed10: 'hsl(348, 85%, 64%)',
    workOsRed11: 'hsl(348, 100%, 72%)',
    workOsRed12: 'hsl(341, 89%, 96%)',

    workOsPurple1: 'hsl(240, 20%, 10%)',
    workOsPurple2: 'hsl(240, 30%, 13%)',
    workOsPurple3: 'hsl(242, 37%, 23%)',
    workOsPurple4: 'hsl(242, 39%, 26%)',
    workOsPurple5: 'hsl(242, 42%, 30%)',
    workOsPurple6: 'hsl(240, 45%, 33%)',
    workOsPurple7: 'hsl(240, 45%, 41%)',
    workOsPurple8: 'hsl(240, 52%, 51%)',
    workOsPurple9: 'hsl(240, 56%, 62%)',
    workOsPurple10: 'hsl(241, 63%, 66%)',
    workOsPurple11: 'hsl(242, 95%, 77%)',
    workOsPurple12: 'hsl(242, 87%, 96%)',

    workOsBlue1: 'hsl(208, 35%, 9%)',
    workOsBlue2: 'hsl(208, 50%, 10%)',
    workOsBlue3: 'hsl(210, 59%, 17%)',
    workOsBlue4: 'hsl(210, 66%, 19%)',
    workOsBlue5: 'hsl(211, 71%, 22%)',
    workOsBlue6: 'hsl(212, 77%, 24%)',
    workOsBlue7: 'hsl(212, 85%, 28%)',
    workOsBlue8: 'hsl(212, 90%, 34%)',
    workOsBlue9: 'hsl(206, 100%, 46%)',
    workOsBlue10: 'hsl(207, 100%, 52%)',
    workOsBlue11: 'hsl(208, 100%, 66%)',
    workOsBlue12: 'hsl(208, 98%, 96%)',

    workOsGreen1: 'hsl(152, 53%, 6.5%)',
    workOsGreen2: 'hsl(153, 82%, 7%)',
    workOsGreen3: 'hsl(154, 80%, 11.5%)',
    workOsGreen4: 'hsl(155, 80%, 13%)',
    workOsGreen5: 'hsl(156, 80%, 14%)',
    workOsGreen6: 'hsl(158, 80%, 15%)',
    workOsGreen7: 'hsl(164, 81%, 18%)',
    workOsGreen8: 'hsl(164, 84%, 22%)',
    workOsGreen9: 'hsl(164, 84%, 34%)',
    workOsGreen10: 'hsl(166, 86%, 36%)',
    workOsGreen11: 'hsl(168, 94%, 41%)',
    workOsGreen12: 'hsl(170, 77%, 93%)',

    workOsYellow1: 'hsl(45, 100%, 6%)',
    workOsYellow2: 'hsl(46, 100%, 7%)',
    workOsYellow3: 'hsl(45, 100%, 12%)',
    workOsYellow4: 'hsl(45, 100%, 13.5%)',
    workOsYellow5: 'hsl(47, 100%, 15%)',
    workOsYellow6: 'hsl(49, 100%, 15%)',
    workOsYellow7: 'hsl(49, 90%, 19%)',
    workOsYellow8: 'hsl(50, 100%, 22%)',
    workOsYellow9: 'hsl(53, 92%, 50%)',
    workOsYellow10: 'hsl(54, 100%, 60%)',
    workOsYellow11: 'hsl(48, 100%, 45%)',
    workOsYellow12: 'hsl(53, 100%, 91%)',

    ...grayDark,
    ...mauveDark,
    ...slateDark,
    ...sageDark,
    ...oliveDark,
    ...sandDark,
    ...tomatoDark,
    ...redDark,
    ...crimsonDark,
    ...pinkDark,
    ...plumDark,
    ...purpleDark,
    ...violetDark,
    ...indigoDark,
    ...blueDark,
    ...skyDark,
    ...mintDark,
    ...cyanDark,
    ...tealDark,
    ...greenDark,
    ...grassDark,
    ...limeDark,
    ...yellowDark,
    ...amberDark,
    ...orangeDark,
    ...brownDark,
    ...bronzeDark,
    ...goldDark,

    ...grayDarkA,
    ...mauveDarkA,
    ...slateDarkA,
    ...sageDarkA,
    ...oliveDarkA,
    ...sandDarkA,
    ...tomatoDarkA,
    ...redDarkA,
    ...crimsonDarkA,
    ...pinkDarkA,
    ...plumDarkA,
    ...purpleDarkA,
    ...violetDarkA,
    ...indigoDarkA,
    ...blueDarkA,
    ...skyDarkA,
    ...mintDarkA,
    ...cyanDarkA,
    ...tealDarkA,
    ...greenDarkA,
    ...grassDarkA,
    ...limeDarkA,
    ...yellowDarkA,
    ...amberDarkA,
    ...orangeDarkA,
    ...brownDarkA,
    ...bronzeDarkA,
    ...goldDarkA,

    // Semantic colors
    hiContrast: '$slate12',
    loContrast: '$slate1',
    canvas: 'hsl(0 0% 15%)',
    panel: '$slate3',
    transparentPanel: 'hsl(0 100% 100% / 97%)',
    shadowLight: 'hsl(206 22% 7% / 35%)',
    shadowDark: 'hsl(206 22% 7% / 20%)',
  },
});
